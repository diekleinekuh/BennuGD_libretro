set(ZIG_EXT "sh")

if(WIN32)
    set(ZIG_EXT "cmd")
endif()

set(CMAKE_C_COMPILER "${CMAKE_CURRENT_LIST_DIR}/zigcc.${ZIG_EXT}")
set(CMAKE_C_COMPILER_ID "Clang")
set(CMAKE_C_FLAGS_INIT "-target ${ZIG_TARGET} -fno-sanitize=all")

set(CMAKE_CXX_COMPILER "${CMAKE_CURRENT_LIST_DIR}/zigc++.${ZIG_EXT}")
set(CMAKE_CXX_COMPILER_ID "Clang")
set(CMAKE_CXX_FLAGS_INIT "-target ${ZIG_TARGET} -fno-sanitize=all")

set(CMAKE_AR "${CMAKE_CURRENT_LIST_DIR}/zigar.${ZIG_EXT}")
set(CMAKE_RANLIB "${CMAKE_CURRENT_LIST_DIR}/zigranlib.${ZIG_EXT}")
set(CMAKE_ASM_COMPILER "${CMAKE_CURRENT_LIST_DIR}/zigcc.${ZIG_EXT}")
set(CMAKE_ASM_COMPILERID "Clang")
set(CMAKE_ASM_FLAGS_INIT "-target ${ZIG_TARGET}")

set(CMAKE_RC_COMPILER "${CMAKE_CURRENT_LIST_DIR}/zigrc.${ZIG_EXT}")
set(CMAKE_RC_COMPILE_OBJECT "<CMAKE_RC_COMPILER> <FLAGS> <DEFINES> -- <SOURCE> <OBJECT>")
set(CMAKE_RC_COMPILER_ID "Clang")

set(CMAKE_FIND_ROOT_PATH "${CMAKE_CURRENT_LIST_DIR}/does/not/exist") #no system root for zig crosscompile
set(CMAKE_FIND_ROOT_PATH_MODE_PROGRAM NEVER)
set(CMAKE_FIND_ROOT_PATH_MODE_LIBRARY ONLY)
set(CMAKE_FIND_ROOT_PATH_MODE_INCLUDE ONLY)
set(CMAKE_FIND_ROOT_PATH_MODE_PACKAGE ONLY)
set(PKG_CONFIG_EXECUTABLE "") #not available for zigg builds
